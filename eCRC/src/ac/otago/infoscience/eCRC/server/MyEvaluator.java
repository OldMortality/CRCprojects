/*

Disclaimer of Warranties. The author disclaims to the fullest extent authorized by law any and all other warranties, 
whether express or implied, including, without limitation, any implied warranties of title, non-infringement, quiet enjoyment, 
integration, merchantability or fitness for a particular purpose. Without limitation of the foregoing, the author expressly 
does not warrant that:
(a) the software will meet your requirements or expectations;
(b) the software or the software content] will be free of bugs, errors, viruses or other defects;
(c) any results, output, or data provided through or generated by the software will be accurate, up-to-date, complete or reliable;
(d) the software will be compatible with third party software;
(e) any errors in the software will be corrected.

Under no circumstances shall the author be liable to any user for direct, indirect, incidental, consequential, 
special, or exemplary damages, arising from the software, or user's use or misuse of the software or any other services 
provided by the author. 

Such limitation of liability shall apply whether the damages arise from the use or
misuse of the software or any other services supplied by the author
(including such damages incurred by third parties), or errors of the software.

The software is supplied “as is” and all use is at your own risk.



Author: Michel de Lange

Dunedin, January 2014.

*/

package ac.otago.infoscience.eCRC.server;

import org.apache.log4j.Level;
import org.apache.log4j.spi.LoggingEvent;
import org.apache.log4j.spi.TriggeringEventEvaluator;

/**
 * This class is necessary for the log4j smtp appender. It allows us
 * to set the filter (warning level at which you start getting emails)
 * to less than ERROR. This is useful for testing. In practice, you
 * probably don't want to get an email for INFO, OR WARNING.
 * 
 * 
 * @author Michel
 *
 */
public class MyEvaluator implements TriggeringEventEvaluator {

	public boolean isTriggeringEvent(LoggingEvent event) {
		
		
		if (event.getLevel() == Level.ERROR ||
				event.getLevel() == Level.FATAL
				) {
			return true;
		} else {
			return false;
		}
	}

}
